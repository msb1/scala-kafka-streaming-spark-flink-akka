# https://www.playframework.com/documentation/latest/Configuration

# play {
#   server {
#     websocket {
#       # Maximum allowable frame payload length. Setting this value to your application's
#       # requirement may reduce denial of service attacks using long data frames.
#       frame.maxLength = 64k
#       frame.maxLength = ${?websocket.frame.maxLength}
#     }
#
#   }
# }

# Properties for akka.kafka.ProducerSettings can be defined in this section
akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  # parallelism = 100

  # How long to wait for `KafkaProducer.close`
  # close-timeout = 60s

  # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
  # can be defined in this configuration section.
  kafka-clients {
    bootstrap.servers = "http://192.168.21.10:9092"
  }
}

# Properties for akka.kafka.ConsumerSettings can be defined in this section
akka.kafka.consumer {
  # Tuning property of scheduled polls.
  # poll-interval = 50ms

  # Tuning property of the `KafkaConsumer.poll` parameter.
  # poll-timeout = 50ms

  # How long to wait for `KafkaConsumer.close`
  # close-timeout = 20s

  # If offset commit requests are not completed within this timeout
  # the returned Future is completed `CommitTimeoutException`.
  # commit-timeout = 15s

  # If commits take longer than this time a warning is logged
  # commit-time-warning = 1s

  # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig can be defined in this configuration section.
  kafka-clients {
    bootstrap.servers = "192.168.21.10:9092"
    group.id = "epdml"
    # auto-commit disabled by default
    # Setting enable.auto.commit means that offsets are committed automatically
    #  with a frequency controlled by the config auto.commit.interval.ms.
    enable.auto.commit = true
    auto.commit.interval.ms = 5000
    auto.offset.reset = "latest"
  }

  # Time to wait for pending requests when a partition is closed
  # wait-close-partition = 500ms
}
